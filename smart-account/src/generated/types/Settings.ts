/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'
import * as beetSolana from '@metaplex-foundation/beet-solana'
import {
  SmartAccountSigner,
  smartAccountSignerBeet,
} from './SmartAccountSigner'
import {
  RestrictedSmartAccountSigner,
  restrictedSmartAccountSignerBeet,
} from './RestrictedSmartAccountSigner'
export type Settings = {
  seed: beet.bignum
  settingsAuthority: web3.PublicKey
  threshold: number
  timeLock: number
  transactionIndex: beet.bignum
  staleTransactionIndex: beet.bignum
  archivalAuthority: beet.COption<web3.PublicKey>
  archivableAfter: beet.bignum
  bump: number
  signers: SmartAccountSigner[]
  restrictedSigners: RestrictedSmartAccountSigner[]
  accountUtilization: number
  Reserved1: number
  Reserved2: number
}

/**
 * @category userTypes
 * @category generated
 */
export const settingsBeet = new beet.FixableBeetArgsStruct<Settings>(
  [
    ['seed', beet.u128],
    ['settings_authority', beetSolana.publicKey],
    ['threshold', beet.u16],
    ['time_lock', beet.u32],
    ['transaction_index', beet.u64],
    ['stale_transaction_index', beet.u64],
    ['archival_authority', beet.coption(beetSolana.publicKey)],
    ['archivable_after', beet.u64],
    ['bump', beet.u8],
    ['signers', beet.array(smartAccountSignerBeet)],
    ['restricted_signers', beet.array(restrictedSmartAccountSignerBeet)],
    ['account_utilization', beet.u8],
    ['_reserved1', beet.u8],
    ['_reserved2', beet.u8],
  ],
  'Settings'
)
